plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'dev.agasen.core'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    agent
}

repositories {
    mavenCentral()
}

dependencies {
    agent "io.opentelemetry.javaagent:opentelemetry-javaagent:2.20.0"
    implementation project(':src:backend:platform:common')
    implementation project(':src:backend:platform:api')

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Database
    implementation 'org.postgresql:postgresql'

    // JSON Processing (for JSONB columns)
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Redis synchronous
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    testImplementation 'org.springframework.security:spring-security-test'

    // Development Tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Test Containers
    testImplementation "org.testcontainers:testcontainers"
    testImplementation "org.testcontainers:postgresql"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "com.redis:testcontainers-redis"
}

tasks.register('copyAgent', Copy) {
    from configurations.agent {
        rename "opentelemetry-javaagent-.*\\.jar", "opentelemetry-javaagent.jar"
    }
    into layout.buildDirectory.dir("agent")
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    dependsOn copyAgent
    archiveFileName = "app.jar"
}
